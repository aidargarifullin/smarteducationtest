# Generated by Django 4.2.16 on 2024-10-24 20:49

from django.db import migrations
from datetime import datetime, timedelta


def create_initial_data(apps, schema_editor):
    # Получаем модели через apps.get_model, чтобы избежать проблем с импортами на уровне миграций
    Task = apps.get_model('tasks', 'Task')
    Comment = apps.get_model('tasks', 'Comment')
    User = apps.get_model('auth', 'User')

    # Создание пользователей
    user1 = User.objects.create_user(username='user1', password='password1')
    user2 = User.objects.create_user(username='user2', password='password2')
    user3 = User.objects.create_user(username='user3', password='password3')

    # Создание задач
    task1 = Task.objects.create(
        title='Task 1',
        description='Description for Task 1',
        created_by=user1,
        assigned_to=user2,
        is_completed=False,
        deadline=datetime.now() + timedelta(days=3)
    )
    task2 = Task.objects.create(
        title='Task 2',
        description='Description for Task 2',
        created_by=user2,
        assigned_to=user3,
        is_completed=False,
        deadline=datetime.now() + timedelta(days=5)
    )
    task3 = Task.objects.create(
        title='Task 3',
        description='Description for Task 3',
        created_by=user3,
        assigned_to=user1,
        is_completed=True,
        deadline=datetime.now() + timedelta(days=1)
    )

    # Добавление комментариев к задачам
    Comment.objects.create(task=task1, author=user1, content='Comment 1 for Task 1')
    Comment.objects.create(task=task1, author=user2, content='Comment 2 for Task 1')
    Comment.objects.create(task=task2, author=user2, content='Comment 1 for Task 2')
    Comment.objects.create(task=task3, author=user3, content='Comment 1 for Task 3')


def delete_initial_data(apps, schema_editor):
    # Удаление пользователей и связанных данных при откате миграции
    User = apps.get_model('auth', 'User')
    Task = apps.get_model('tasks', 'Task')
    Comment = apps.get_model('tasks', 'Comment')

    # Удаление всех данных, созданных миграцией
    Comment.objects.all().delete()
    Task.objects.all().delete()
    User.objects.filter(username__in=['user1', 'user2', 'user3']).delete()


class Migration(migrations.Migration):

    dependencies = [
        ('tasks', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(create_initial_data, delete_initial_data),
    ]
